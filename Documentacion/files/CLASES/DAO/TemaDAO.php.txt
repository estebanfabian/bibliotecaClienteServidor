<?php

/**
 * Long Desc 
 * */

/**
 * Esta clase ejecuta las conusltas relacionadas con el tema
 *
 * 
 * @package VO
 * @category Educativo
 * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com>
 * @link https://github.com/estebanfabian/bibliotecaClienteServidor.git 
 * @version Revision: 1.0 
 * @access publico
 * * */
class TemaDAO {

    /**
     * Este metodo permite registrar un nuevo tema
     * nesesaria como es el fabricante y el numero del cargador que corresponde al computador, además 
     * de contar con sus observsaciones
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene la informacion a registrar del computador 
     * @return array() Se envia la respuesta del registro donde se indica si fue exitosa o no 
     * */
    function CrearTema($array) {

        if ($this->Filtro($array) == "ok") {
            $respuesta = array();
            $respuesta["sucess"] = "Reguistro duplicado";
            echo json_encode($respuesta);
        } else {

            $sql = "call tema (2,?,?);";
            $BD = new ConectarBD();
            $conn = $BD->getMysqli();
            $stmp = $conn->prepare($sql);

            $this->respuesta($conn, $this->insert($array, $stmp));
        }
    }

    /**
     * Este metodo permite modificar informacíon sobre tema
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene la informacion a registrar del computador 
     * @return array() Se envia la respuesta del registro donde se indica si fue exitosa o no la modificacion
     * */
    function ModificarTema($array) {

        $sql = 'call tema (1,?,?);';
        $BD = new ConectarBD();
        $conn = $BD->getMysqli();
        $stmp = $conn->prepare($sql);

        $TemaVo = new TemaVO();

        $TemaVo->setNombreTema($array->nombreTema);
        $TemaVo->setDescripcion($array->Descricion);

        $nombreTema = $TemaVo->getNombreTema();
        $Descricion = $TemaVo->getDescripcion();

        $stmp->bind_param("ss", $nombreTema, $Descricion);
        $this->Respuesta($conn, $stmp);
    }

    /**
     * Este metodo permite eliminar el registro del tema
     * nesesaria como es el fabricante y los cables que tiene, además 
     * de contar con sus observsaciones
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene la informacion a registrar del video beam 
     * @return array() Se envia la respuesta si fue eliminado con exito donde se indica si fue exitosa , fallida o ya se encuentra duplicado 
     * */
    function EliminarTema($array) {
        if ($this->Filtro($array) == "no") {
            $respuesta = array();
            $respuesta["sucess"] = "no";
            echo json_encode($respuesta);
        } else {
            $sql = "call miprocesos1 (7,?);";

            $BD = new ConectarBD();
            $conn = $BD->getMysqli();
            $stmp = $conn->prepare($sql);

            $TemaVo = new TemaVO();
            $TemaVo->setNombreTema($array->nombreTema);

            $idTema = $TemaVo->getNombreTema();

            $stmp->bind_param("s", $idTema);
            $this->respuesta($conn, $stmp);
        }
    }

    /**
     * Este metodo permite cerrar la conexiòn con la base de datos y retornar si la query fue exitosa o no
     * @param array() $conn Variable que establece el driver de conexión 
     * @param array() $stmp prepara la ejecucion de la sentencia 
     * @return array() Se envia la respuesta de la actualización donde se indica si fue exitosa o no 
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * */
    function Respuesta($conn, $stmp) {
        $respuesta = array();
        if ($stmp->execute() == 1) {
            $respuesta["sucess"] = "ok";
        } else {
            $respuesta["sucess"] = "no";
            echo json_encode($stmp);
        }
        $stmp->close();
        $conn->close();
        echo json_encode($respuesta);
    }

    /**
     * Este metodo permite buscar el tema.
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene el numero de serial del computador que desea buscar.
     * @return array() Se envia la respuesta  toda la informaciòn del temas cargados en la base de datos
     * */
    function BuscarTema($array) {
        $sql = "call miprocesos1 (8,?);";
        $BD = new ConectarBD();
        $conn = $BD->getMysqli();
        $stmp = $conn->prepare($sql);

        $TemaVo = new TemaVO();
        $TemaVo->setNombreTema($array->nombreTema);

        $nombreTema = $TemaVo->getNombreTema();

        $stmp->bind_param("s", $nombreTema);
        $stmp->execute();

        $stmp->bind_result($Descricion);
        $respuesta = array();
        while ($stmp->fetch()) {
            $tmp = array();
            $tmp["nombreTema"] = $nombreTema;
            $tmp["Descricion"] = $Descricion;
            $respuesta[sizeof($respuesta)] = $tmp;
        }
        $stmp->close();
        $conn->close();
        echo json_encode($tmp);
    }

    /**
     * Este metodo permite registrar un nuevo tema
     * nesesaria como es el fabricante y el numero del cargador que corresponde al computador, además 
     * de contar con sus observsaciones
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene la informacion a registrar del computador 
     * @return array() Se envia la respuesta del registro donde se indica si fue exitosa o no 
     * */
    function insert($array, $stmp) {

        $TemaVo = new TemaVO();
        $TemaVo->setNombreTema($array->nombreTema);
        $TemaVo->setDescripcion($array->Descricion);

        $nombreTema = $TemaVo->getNombreTema();
        $Descricion = $TemaVo->getDescripcion();

        $stmp->bind_param("ss", $nombreTema, $Descricion);
        return $stmp;
    }

    /**
     * Este metodo valida si el tema ya esta registrado en la base de datos
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene el numero de serial del video beam que desea validar su existencia en la base de datos.
     * @return array() Se envia la respuesta si el video beam esta registrado o no.
     * */
    function Filtro($array) {

        $sql = 'call miprocesos1 (1,?);';

        $BD = new ConectarBD();
        $conn = $BD->getMysqli();
        $stmp = $conn->prepare($sql);

        $TemaVo = new TemaVO();
        $TemaVo->setNombreTema($array->nombreTema);

        $nombreTema = $TemaVo->getNombreTema();

        $stmp->bind_param("s", $nombreTema);

        $respuesta = array();
        if ($stmp->execute() == 1) {
            $stmp->bind_result($codigo);
            while ($stmp->fetch()) {
                $respuesta = $codigo;
            }

            if ($codigo != "") {
                $respuesta = "ok";
            } else {
                $respuesta = "no";
            }
        } else {
            $respuesta = "no";
        }
        $stmp->close();
        $conn->close();
        return ($respuesta);
    }

    /**
     * Este metodo permite registrar un nuevo tema
     * nesesaria como es el fabricante y el numero del cargador que corresponde al computador, además 
     * de contar con sus observsaciones
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene la informacion a registrar del computador 
     * @return array() Se envia la respuesta del registro donde se indica si fue exitosa o no 
     * */
    function SMCrearTema($array) {

        if ($this->Filtro($array) == "ok") {
            $respuesta = array();
            $respuesta["sucess"] = "Reguistro duplicado";
            echo json_encode($respuesta);
        } else {

            $sql = "call tema (2,?,?);";
            $BD = new ConectarBD();
            $conn = $BD->getMysqli();
            $stmp = $conn->prepare($sql);

            $respuesta = array();
            if ($this->insert($array, $stmp)->execute() == 1) {
                $respuesta = "ok";
            } else {
                $respuesta = "no";
            }
            $stmp->close();
            $conn->close();
            return $respuesta;
        }
    }

    /**
     * Este metodo carga todos los temas registrado
     * @author Esteban fabian patiño montealegre <estebanfabianp@gmail.com> 
     * @since Revision: 1.0 
     * @param array() $array datos de tipo json que contiene el numero de serial del video beam que desea validar su existencia en la base de datos.
     * @return array() Retorna todos los registros de los temas
     * */
    function ListarTema() {
        $sql = "SELECT * FROM `listartema`";

        $BD = new ConectarBD();
        $conn = $BD->getMysqli();
        $stmp = $conn->prepare($sql);

        $stmp->execute();

        $stmp->bind_result($NombreAutor, $Nota);
        $respuesta = array();
        while ($stmp->fetch()) {
            $tmp = array();
            $tmp["NombreAutor"] = $NombreAutor;
            $tmp["Nota"] = $Nota;
            $respuesta[sizeof($respuesta)] = $tmp;
        }
        $stmp->close();
        $conn->close();
        echo json_encode($respuesta);
    }

}

